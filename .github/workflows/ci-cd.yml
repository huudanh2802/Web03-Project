name: Docker Image CI

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: "us-east-1"
  ECS_TASK_DEFINITION: arn:aws:ecs:us-east-1:061051240995:task-definition/calico-note-service-task-definition:2

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push-image.outputs.image }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x web03-backend/gradlew

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/web03-project:calico-note-service -f web03-backend/Dockerfile web03-backend/

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image to GHCR
        id: push-image
        run: |
          docker push ghcr.io/${{ github.actor }}/web03-project:calico-note-service
          echo "image=ghcr.io/${{ github.actor }}/web03-project:calico-note-service" >> $GITHUB_OUTPUT

  deploy-image:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::061051240995:role/github-aws-oicd
          aws-region: "us-east-1"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} \
          --query taskDefinition > ecs-task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          container-name: calico-note-service-image
          image: ${{ needs.build-and-push-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: calico-note-service
          cluster: CalicoCluster
          wait-for-service-stability: true
